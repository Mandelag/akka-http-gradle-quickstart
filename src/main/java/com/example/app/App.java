/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example.app;

import akka.NotUsed;
import akka.actor.ActorSystem;
import akka.http.javadsl.ConnectHttp;
import akka.http.javadsl.Http;
import akka.http.javadsl.ServerBinding;
import akka.http.javadsl.model.HttpRequest;
import akka.http.javadsl.model.HttpResponse;
import akka.http.javadsl.server.Route;
import akka.stream.ActorMaterializer;
import akka.stream.javadsl.Flow;

import java.io.IOException;
import java.util.concurrent.CompletionStage;

import static akka.http.javadsl.server.Directives.*;

public class App {
  public static void main(String[] args) throws IOException {
    ActorSystem system = ActorSystem.create("routes");

    final Http http = Http.get(system);
    final ActorMaterializer materializer = ActorMaterializer.create(system);

    final Flow<HttpRequest, HttpResponse, NotUsed> routes = appRoute().flow(system, materializer);
    final CompletionStage<ServerBinding> binding = http.bindAndHandle(routes, ConnectHttp.toHost("0.0.0.0", 8080), materializer);

    System.out.println("Server started...");
    System.in.read();

    binding.thenCompose(ServerBinding::unbind)
        .thenAccept(unbound -> system.terminate());
  }

  public static Route appRoute() {
    return path("", () ->
        get(() -> complete("Hello, World!"))
    );
  }
}
